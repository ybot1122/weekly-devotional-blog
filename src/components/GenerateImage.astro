---
import { getCollection } from "astro:content";
import { follow_ups } from "../actions/generate_image";

const posts = (await getCollection("blog"))
  .filter((a) => a.id !== "using-mdx")
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<form id="generate-image-form" class="generate-image-form">
  <label for="article-select" class="generate-image-label">
    Choose an article:
  </label>
  <select id="article-select" name="article" class="generate-image-select">
    {posts.map((post) => <option value={post.id}>{post.data.title}</option>)}
  </select>
  <button id="generate-btn" type="submit" class="generate-image-btn">
    Generate Image For this Post
  </button>
  <div id="follow-ups" class="hidden">
    {
      follow_ups.map((item, ind) => (
        <button class="generate-image-btn" id={`follow-up-${ind}`}>
          {item}
        </button>
      ))
    }
  </div>
  <div
    id="generated-image"
    class="mt-6 p-4 bg-gray-50 rounded-lg shadow border border-gray-100 flex flex-col items-center hidden"
  >
    <img
      id="image-preview"
      src=""
      alt="Generated for article"
      class="max-w-full rounded-md border border-gray-200 shadow"
    />
  </div>
</form>

<style>
  #follow-ups {
    display: flex;
    width: 100%;
    justify-content: stretch;
    & > * {
      flex: 1 1 0;
    }
    gap: 0.5rem;
    margin-top: 1rem;
    padding: 0.5rem;
  }

  .generate-image-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 1.5rem;
    background: #fff;
    border-radius: 0.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #e5e7eb;
  }
  .generate-image-label {
    font-size: 1.125rem;
    font-weight: 600;
    color: #374151;
  }
  .generate-image-select {
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    color: #374151;
    outline: none;
    transition: border-color 0.2s;
  }
  .generate-image-select:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 2px #60a5fa;
  }
  .generate-image-btn {
    background: #2563eb;
    color: #fff;
    font-weight: 600;
    padding: 0.5rem 0;
    border-radius: 0.375rem;
    border: none;
    cursor: pointer;
    transition: background 0.2s;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.04);
  }
  .generate-image-btn:hover {
    background: #1d4ed8;
  }

  .hidden {
    display: none !important;
  }
</style>

<script>
  import { actions } from "astro:actions";

  let prev_response_id = "";

  const followUps = document.getElementById("follow-ups")!;
  const form = document.getElementById("generate-image-form")!;
  const select = document.getElementById(
    "article-select"
  )! as HTMLSelectElement;
  const btn = document.getElementById("generate-btn")! as HTMLButtonElement;
  const imageDiv = document.getElementById("generated-image")!;
  const img = document.getElementById("image-preview")! as HTMLImageElement;

  select.addEventListener("change", () => {
    imageDiv.classList.add("hidden");
    followUps.classList.add("hidden");
    btn.classList.remove("hidden");
    prev_response_id = "";
    btn.textContent = "Generate Image";
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    btn.disabled = true;
    btn.textContent = "Generating...";
    imageDiv.classList.add("hidden");

    const post_id = select.value;

    //const res = await actions.generate_image.generateImage({ post_id });

    const res: any = await new Promise((resolve) =>
      setTimeout(() => {
        resolve({
          data: {
            imageBase64:
              "iVBORw0KGgoAAAANSUhEUgAAAAUA\nAAAAFCAIAAAAC4f3EAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAABGdBTUEAANbY1\n\n",
            reponse_id: "12345",
          },
        });
      }, 2000)
    );

    if (res.data) {
      img.src = `data:image/*;base64,${res.data.imageBase64}`;
      prev_response_id = res.data.reponse_id;
      btn.textContent = "Generate Image";
      followUps.classList.remove("hidden");
      btn.classList.add("hidden");
    } else {
      btn.textContent = "Something went wrong. Sorry!";
    }
    imageDiv.classList.remove("hidden");

    btn.disabled = false;
  });
</script>
